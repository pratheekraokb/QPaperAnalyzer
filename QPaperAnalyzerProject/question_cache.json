{"93b6f28682497f67b57469ae957b7ec0": "Approaches to Software Design - Functional Oriented Design, Object Oriented Design, Case  Study of Automated Fire Alarm System", "2619d85e7f6d76fd84437c47ec743ca6": "Object Modeling Using Unified Modeling Language (UML) \u2013 Basic Object Oriented concepts,  UML diagrams, Use case model, Class diagram, Interaction diagram, Activity diagram, State  chart diagram", "5880375c6b25db25461b4c7d28249c7e": "ER model - Basic concepts, entity set & attributes, notations, Relationships and constraints,\r cardinality, participation, notations, weak entities, relationships of degree 3", "ecdc4231821ca6ee0a7dbd60033c5e36": "Concept & Overview of Database Management Systems (DBMS) - Characteristics of Database\r system, Database Users, structured, semi-structured and unstructured data", "37f2f7a507c5a4122a58e0f2231c658f": "query examples, introduction to Structured Query Language (SQL), Data Definition\r Language (DDL), Table definitions and operations \u2013 CREATE, DROP, ALTER, INSERT,\r DELETE, UPDATE", "399e5d950a867e4c14c741ec6ce840e4": "query examples, introduction to Structured Query Language (SQL), Data Definition\r Language (DDL), Table definitions and operations \u2013 CREATE, DROP, ALTER, INSERT,\r DELETE, UPDATE", "7340f0a7ca7efdbf04f55e0c82a00526": "SQL DML (Data Manipulation Language) - SQL queries on single and multiple tables, Nested\r queries (correlated and non-correlated), Aggregation and grouping, Views, assertions, Triggers,\r SQL data types", "0bb9378f863b0e0c4bd753ea812f919c": "Physical Data Organization - Review of terms: physical and logical records, blocking factor,\r pinned and unpinned organization", "55cc0ebbef6993d805b6a7612d7c5b86": "First Normal Form (1NF),\r Second Normal Form (2NF), Third Normal Form (3NF), Boyce Codd Normal Form (BCNF),\r Lossless join and dependency preserving decomposition, Algorithms for checking Lossless Join\r (LJ) and Dependency Preserving (DP) properties", "599887700e158abab5fce24f9a1eab55": "First Normal Form (1NF),\r Second Normal Form (2NF), Third Normal Form (3NF), Boyce Codd Normal Form (BCNF),\r Lossless join and dependency preserving decomposition, Algorithms for checking Lossless Join\r (LJ) and Dependency Preserving (DP) properties", "485e53c7dc234a8469d3bd414ea920e7": "Serial schedules, Concurrent and Serializable Schedules, Conflict equivalence and conflict\r serializability, Recoverable and cascade-less schedules, Locking, Two-phase locking and its\r variations", "8de968bcee8ab6ae64391f59d733e699": "Serial schedules, Concurrent and Serializable Schedules, Conflict equivalence and conflict\r serializability, Recoverable and cascade-less schedules, Locking, Two-phase locking and its\r variations", "573d43a53629f78d7bc43a0aba654e94": "ER model - Basic concepts, entity set & attributes, notations, Relationships and constraints,\r cardinality, participation, notations, weak entities, relationships of degree 3", "d97731d40e9f062240decf58fd876569": "Concept & Overview of Database Management Systems (DBMS) - Characteristics of Database\r system, Database Users, structured, semi-structured and unstructured data", "b6395d0f739bc0e8872294106bdf09ef": "Concept & Overview of Database Management Systems (DBMS) - Characteristics of Database\r system, Database Users, structured, semi-structured and unstructured data", "3cb6088b733d374aed0b992daffc9135": "ER model - Basic concepts, entity set & attributes, notations, Relationships and constraints,\r cardinality, participation, notations, weak entities, relationships of degree 3", "45ff98ddf63d730257484d7156c368d5": "Structure of Relational Databases - Integrity Constraints, Synthesizing ER diagram to relational\r schema\r Introduction to Relational Algebra - select, project, cartesian product operations, join - Equi-join,\r natural join", "3d1f7f43830eabc4e3a2825c349c16c9": "query examples, introduction to Structured Query Language (SQL), Data Definition\r Language (DDL), Table definitions and operations \u2013 CREATE, DROP, ALTER, INSERT,\r DELETE, UPDATE", "1b0c61d297c88f88ea1bf71577ac92d0": "query examples, introduction to Structured Query Language (SQL), Data Definition\r Language (DDL), Table definitions and operations \u2013 CREATE, DROP, ALTER, INSERT,\r DELETE, UPDATE", "25b3c61e20281647775413b2d4faa52a": "query examples, introduction to Structured Query Language (SQL), Data Definition\r Language (DDL), Table definitions and operations \u2013 CREATE, DROP, ALTER, INSERT,\r DELETE, UPDATE", "d23158dad32e9d9036d9019e6e901fd6": "SQL DML (Data Manipulation Language) - SQL queries on single and multiple tables, Nested\r queries (correlated and non-correlated), Aggregation and grouping, Views, assertions, Triggers,\r SQL data types", "eee0b01ebfc12efdb9a16b8af399328d": "SQL DML (Data Manipulation Language) - SQL queries on single and multiple tables, Nested\r queries (correlated and non-correlated), Aggregation and grouping, Views, assertions, Triggers,\r SQL data types", "220b1398eff3fec1aa7e262190e6bb6d": "SQL DML (Data Manipulation Language) - SQL queries on single and multiple tables, Nested\r queries (correlated and non-correlated), Aggregation and grouping, Views, assertions, Triggers,\r SQL data types", "9415a6c02f6680e637b18c63879690fa": "SQL DML (Data Manipulation Language) - SQL queries on single and multiple tables, Nested\r queries (correlated and non-correlated), Aggregation and grouping, Views, assertions, Triggers,\r SQL data types", "d0527cad77132625f9f9980c614e8e6b": "Different anomalies in designing a database, The idea of normalization, Functional dependency,\r Armstrong\u2019s Axioms (proofs not required), Closures and their computation, Equivalence of\r Functional Dependencies (FD), Minimal Cover (proofs not required)", "8ac8d0c9f2a08e87ca55efcb89e8d65d": "First Normal Form (1NF),\r Second Normal Form (2NF), Third Normal Form (3NF), Boyce Codd Normal Form (BCNF),\r Lossless join and dependency preserving decomposition, Algorithms for checking Lossless Join\r (LJ) and Dependency Preserving (DP) properties", "13dbce0c556539a9d918162c48f44f48": "Different anomalies in designing a database, The idea of normalization, Functional dependency,\r Armstrong\u2019s Axioms (proofs not required), Closures and their computation, Equivalence of\r Functional Dependencies (FD), Minimal Cover (proofs not required)", "751860f288faad9fe559a555dd87a0d0": "First Normal Form (1NF),\r Second Normal Form (2NF), Third Normal Form (3NF), Boyce Codd Normal Form (BCNF),\r Lossless join and dependency preserving decomposition, Algorithms for checking Lossless Join\r (LJ) and Dependency Preserving (DP) properties", "cb8fd0c70ef706bb388ec880057228ee": "Transaction Processing Concepts - overview of concurrency control, Transaction Model,\r Significance of concurrency Control & Recovery, Transaction States, System Log, Desirable\r Properties of transactions", "61be631bffae565d26d3e9bb676c1cbc": "Serial schedules, Concurrent and Serializable Schedules, Conflict equivalence and conflict\r serializability, Recoverable and cascade-less schedules, Locking, Two-phase locking and its\r variations", "a252622bec4074be7d43e1827962cb32": "Transaction Processing Concepts - overview of concurrency control, Transaction Model,\r Significance of concurrency Control & Recovery, Transaction States, System Log, Desirable\r Properties of transactions", "a2fd7dae63483249eea320b6205c090d": "Transaction Processing Concepts - overview of concurrency control, Transaction Model,\r Significance of concurrency Control & Recovery, Transaction States, System Log, Desirable\r Properties of transactions", "25c03d426f52039e4132611052ce376a": "Overview of Computing Paradigms-Grid Computing,\r Cluster Computing, Distributed Computing, Utility Computing, Cloud Computing", "d402141b3c64b788b0b5440f05ee3bf7": "Cloud delivery (service) models-Infrastructure-as-a-Service (IaaS),\r Platform-as-a-Service(PaaS),Software-as-a-Service (SaaS), XaaS (Anything-as-a-service)-Cloud\r deployment models- Public cloud, Community cloud, Private cloud, Hybrid cloud", "be247ce9ce7fcac3b43e76bcc4850f2f": "Introduction to virtualization-Virtualizing physical computing resources, Virtual Machines\r (Machine virtualization), non-virtualized v/s virtualized machine environments", "3ff892bdbe026cb0756b7dd3d662f874": "Full Virtualization, ParaVirtualization, Hardware-assisted virtualization, OS level virtualization", "08f22e5e3859ba17c166e94b4fd68249": "Open-source software platforms for private cloud-OpenStack, CloudStack, Basics of Eucalyptus,\r Open Nebula, Nimbus", "93037eb0a25d5f9e404ed5e4c83d658c": "Cloud Programming- Parallel Computing and Programming Paradigms", "19efe5fa27c5591b1e61024403b0e013": "Basic terms and concepts in security- Threat agents, Cloud security threats/risks, Trust", "df7d1b9d2ee04e332597aecaf8ce67fe": "Basic terms and concepts in security- Threat agents, Cloud security threats/risks, Trust", "8b93af0dbd460c6467c9c1eed78f31ca": "Microsoft Azure: Azure Platform Architecture, Hyper-V, Azure Virtual Machine, Compute\r services, Storage services", "d108715a784c3f4a4c1274fc79f4b4da": "Storage services-Simple\r Storage System (Amazon S3), Elastic Block Store (Amazon EBS), Database Services, Amazon\r CDN Services and Communication services", "93bcf4e07760954fb279f431f99cf54a": "Overview of Computing Paradigms-Grid Computing,\r Cluster Computing, Distributed Computing, Utility Computing, Cloud Computing", "74a8a6e98cebb975f3c2981ba1812353": "Overview of Computing Paradigms-Grid Computing,\r Cluster Computing, Distributed Computing, Utility Computing, Cloud Computing", "477b1ee62300f10c96811114a73f7880": "Overview of Computing Paradigms-Grid Computing,\r Cluster Computing, Distributed Computing, Utility Computing, Cloud Computing", "b925ef5ec60484b6dd2066bda9460fa4": "NIST\r reference Model-Basic terminology and concepts", "889c39955d1e510ad3b6a78c7fe3f148": "Case Study- Xen: Para-virtualization, VMware: full virtualization", "206f5d26e5cb0cd3754e066a2f37152c": "Case Study- Xen: Para-virtualization, VMware: full virtualization", "0f7069e32e9bab892890b9913d57f28d": "Introduction to virtualization-Virtualizing physical computing resources, Virtual Machines\r (Machine virtualization), non-virtualized v/s virtualized machine environments", "6dc91c1468b7116702bfc2d13b44c630": "Basics of Network\r Virtualization, Storage Virtualization and Desktop Virtualization, Pros and cons of\r virtualization", "0e66decbc883e27195106d8db293e7fc": "Map Reduce \u2013 Hadoop\r Library from Apache, HDFS, Pig Latin High Level Languages, Apache Spark", "f896a416021d27e442b6c688c01a8180": "Map Reduce \u2013 Hadoop\r Library from Apache, HDFS, Pig Latin High Level Languages, Apache Spark", "8bb11f3dd1573118f78ced5f03bca129": "Open-source software platforms for private cloud-OpenStack, CloudStack, Basics of Eucalyptus,\r Open Nebula, Nimbus", "dd58371b34931b04eb6742993b861111": "Broadband networks and internet architecture- Internet Service Providers (ISPs), Data center\r technology, Web technology, Multitenant technology, Service technology", "eba4ad4d7887004611647b1402171497": "Infrastructure securityNetwork Level Security, Host Level Security, Application level security, Security of the Physical\r Systems", "12859c066bc73766c356cbd2643c762c": "Basic terms and concepts in security- Threat agents, Cloud security threats/risks, Trust", "5e250fc5cd51a1ba7a2a792f5e3f4896": "Basic terms and concepts in security- Threat agents, Cloud security threats/risks, Trust", "cdd7d4bb347288f55f09b41d78c9117b": "Infrastructure securityNetwork Level Security, Host Level Security, Application level security, Security of the Physical\r Systems", "5bd7fb6b110458da7f8682e0ab5d3dae": "Google Cloud Platform:- IaaS Offerings: Compute Engine (GCE), Cloud Storage, PaaS\r Offerings: Google App Engine (GAE), Storage services, Application services, Compute services,\r Database Services, SaaS Offerings: Gmail, Docs, Google Drive", "94822b2f593cf6b35af0ceaedc9edf0a": "Google Cloud Platform:- IaaS Offerings: Compute Engine (GCE), Cloud Storage, PaaS\r Offerings: Google App Engine (GAE), Storage services, Application services, Compute services,\r Database Services, SaaS Offerings: Gmail, Docs, Google Drive", "3d94987e25e2ab236ebd226c8f2cb940": "Google Cloud Platform:- IaaS Offerings: Compute Engine (GCE), Cloud Storage, PaaS\r Offerings: Google App Engine (GAE), Storage services, Application services, Compute services,\r Database Services, SaaS Offerings: Gmail, Docs, Google Drive", "cffd82da7c0269319b072242689de2cb": "Representation of \r negative numbers- Complements, Subtraction with complements", "8298cdaa97016716e4f642fbf1f0b49e": "Representation of \r negative numbers- Complements, Subtraction with complements", "11441ab716e80a72f1c1ada1f8fcf816": "Basic theorems and Properties of Boolean Algebra", "136c95ea3c30266cf442b6feb6fdf12f": "Boolean  Functions - Canonical and Standard forms", "cc816a71110538556de7518edd63a611": "Design Procedure & Implementation of combinational logic circuits- Binary adders and \r subtractors, Binary Parallel adder, Carry look ahead adder, BCD adder, Code converter, \r Magnitude comparator, Decoder, Demultiplexer, Encoder, Multiplexer, Parity generator/ \r Checker", "3ff78a8845e257459b6f3bdd719686a6": "Design Procedure & Implementation of combinational logic circuits- Binary adders and \r subtractors, Binary Parallel adder, Carry look ahead adder, BCD adder, Code converter, \r Magnitude comparator, Decoder, Demultiplexer, Encoder, Multiplexer, Parity generator/ \r Checker", "d427b67d0dbe084b38e4bc6a056f84df": "Excitation table and characteristic equation", "6aab900330685957e7e926dd97baad87": "Synchronous counters- Binary Up- down counter, BCD counter", "037883d379a7d52bcafd575e1853e039": "Programmable Logic Array(PLA)- Implementation of simple circuits\u00a0using\u00a0PLA", "fcf7c56c53651d4fdcbec138c3e23922": "Ring counter", "4fa64598a9f2156b54bde5a763e6d537": "Decimal, Binary, Octal and Hexadecimal Number Systems- Number Base Conversions", "189891def61cf4b2d7adaa9f8c70df4a": "Addition and subtraction of \r BCD, Octal and Hexadecimal numbers", "572a3286ba82f2c57703a0c32c13887f": "Representation of \r negative numbers- Complements, Subtraction with complements", "265d2cde8bfbe7b5d658d17fcca5f36f": "Decimal, Binary, Octal and Hexadecimal Number Systems- Number Base Conversions", "28c1b92b5503e89bd88bef3987553676": "Simplification of Boolean Functions- Using  Karnaugh- Map Method (upto five variables), Don\u2019t care conditions,\u00a0Product\u00a0of\u00a0sums simplification, Tabulation Method", "3f3c62eb5ec5a08273a6b7b15b53f116": "Digital Logic Gates- Implementation of Boolean functions using basic and universal gates", "ea9369da87ecea16b29ab5a9c532f221": "Simplification of Boolean Functions- Using  Karnaugh- Map Method (upto five variables), Don\u2019t care conditions,\u00a0Product\u00a0of\u00a0sums simplification, Tabulation Method", "da8163c7c5977792bf66f1ba73b68165": "Digital Logic Gates- Implementation of Boolean functions using basic and universal gates", "729c4483a9390b8ac7601e864f25c34b": "Design Procedure & Implementation of combinational logic circuits- Binary adders and \r subtractors, Binary Parallel adder, Carry look ahead adder, BCD adder, Code converter, \r Magnitude comparator, Decoder, Demultiplexer, Encoder, Multiplexer, Parity generator/ \r Checker", "b21bfd21896ff51cbc29936c276c70c4": "Design Procedure & Implementation of combinational logic circuits- Binary adders and \r subtractors, Binary Parallel adder, Carry look ahead adder, BCD adder, Code converter, \r Magnitude comparator, Decoder, Demultiplexer, Encoder, Multiplexer, Parity generator/ \r Checker", "ec8ea6c0a987417c77ee53a00e31bbf8": "Design Procedure & Implementation of combinational logic circuits- Binary adders and \r subtractors, Binary Parallel adder, Carry look ahead adder, BCD adder, Code converter, \r Magnitude comparator, Decoder, Demultiplexer, Encoder, Multiplexer, Parity generator/ \r Checker", "36265c7c2b3230e115b044ae36af272f": "Design Procedure & Implementation of combinational logic circuits- Binary adders and \r subtractors, Binary Parallel adder, Carry look ahead adder, BCD adder, Code converter, \r Magnitude comparator, Decoder, Demultiplexer, Encoder, Multiplexer, Parity generator/ \r Checker", "38c9f23615a283ad730c3f6d5357f7a8": "Flip-flops- SR, JK, T and D", "0fa780b7159c679d1ead3cbd9cbcea9b": "Synchronous counters- Binary Up- down counter, BCD counter", "bfcf8c67869332a6d0b65995249ce7c3": "Synchronous counters- Binary Up- down counter, BCD counter", "4dc77dd949e9833823e8cb37fbcf96c0": "Synchronous counters- Binary Up- down counter, BCD counter", "4d2b31ecfd6d4d970b04183b62df6264": "Programmable Logic Array(PLA)- Implementation of simple circuits\u00a0using\u00a0PLA", "dd60095135235c293e733e71b5fa55b6": "Programmable Logic Array(PLA)- Implementation of simple circuits\u00a0using\u00a0PLA", "761ef6336645f889f611281485710c17": "Representation of floating point numbers, Algorithm for addition and subtraction of floating \r point numbers", "98f63e749911bb8462358a9ef7c9fe01": "Programmable Logic Array(PLA)- Implementation of simple circuits\u00a0using\u00a0PLA"}